name: Build and run tests

on:
  push:
    branches:
      - devel

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  gnu_build:
    name: Build project with GNU Toolchain
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install Nlohmann JSON and Range V3
      run: sudo apt install -y nlohmann-json3-dev librange-v3-dev
    - name: Install boost
      run: sudo apt install -y libboost-all-dev
    - name: Download GTest
      run: cd /usr/src/; sudo git clone https://github.com/google/googletest.git
    - name: Build GTest
      run: cd /usr/src/googletest; sudo cmake .; sudo make -j4
    - name: Install GTest
      run: cd /usr/src/googletest; sudo make install
    - name: Download But library
      run: cd /usr/src/; sudo git clone https://github.com/el-bart/but.git
    - name: Build But library
      run: cd /usr/src/but/build/; sudo cmake .. -DBUT_ENABLE_PIC=1; sudo make
    - name: Install But library
      run: cd /usr/src/but/build; sudo make install
    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{runner.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: export CXX=g++-10; cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config $BUILD_TYPE

    - name: Test
      working-directory: ${{runner.workspace}}/build
      shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C $BUILD_TYPE --verbose

  llvm_build:
    name: Build project with LLVM Toolchain
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Clang
        run: sudo apt install clang-10
      - name: Install Nlohmann JSON and Range V3
        run: sudo apt install -y nlohmann-json3-dev librange-v3-dev
      - name: Install boost
        run: sudo apt install -y libboost-all-dev
      - name: Download GTest
        run: cd /usr/src/; sudo git clone https://github.com/google/googletest.git
      - name: Build GTest
        run: cd /usr/src/googletest; sudo cmake .; sudo make -j4
      - name: Install GTest
        run: cd /usr/src/googletest; sudo make install
      - name: Download But library
        run: cd /usr/src/; sudo git clone https://github.com/el-bart/but.git
      - name: Build But library
        run: cd /usr/src/but/build/; sudo cmake .. -DBUT_ENABLE_PIC=1; sudo make
      - name: Install But library
        run: cd /usr/src/but/build; sudo make install
      - name: Create Build Environment
        # Some projects don't allow in-source building, so create a separate build directory
        # We'll use this as our working directory for all subsequent commands
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: Configure CMake
        # Use a bash shell so we can use the same syntax for environment variable
        # access regardless of the host operating system
        shell: bash
        working-directory: ${{runner.workspace}}/build
        # Note the current convention is to use the -S and -B options here to specify source
        # and build directories, but this is only available with CMake 3.13 and higher.
        # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
        run: export CXX=clang++; cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

      - name: Build
        working-directory: ${{runner.workspace}}/build
        shell: bash
        # Execute the build.  You can specify a specific target with "--target <NAME>"
        run: cmake --build . --config $BUILD_TYPE

      - name: Test
        working-directory: ${{runner.workspace}}/build
        shell: bash
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: ctest -C $BUILD_TYPE --verbose

